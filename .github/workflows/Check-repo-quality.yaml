name: Repository Quality Checks

on:
  push:
    branches:
      - main
      - '**'
  pull_request:

jobs:
  quality-checks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      # Check for readme
      - name: Check for README
        id: readme_check
        run: |
          if [ -f README.md ]; then
            echo "result=Pass" >> $GITHUB_OUTPUT
          else
            echo "result=Fail" >> $GITHUB_OUTPUT
          fi

      # âœ… Check for LICENSE
      - name: Check for LICENSE
        id: license_check
        run: |
          if [ -f LICENSE ]; then
            echo "result=Pass" >> $GITHUB_OUTPUT
          else
            echo "result=Fail" >> $GITHUB_OUTPUT
          fi

      # âœ… Check for .gitignore
      - name: Check for .gitignore
        id: gitignore_check
        run: |
          if [ -f .gitignore ]; then
            echo "result=Pass" >> $GITHUB_OUTPUT
          else
            echo "result=Fail" >> $GITHUB_OUTPUT
          fi

      # ðŸ§ª Check for any test directory
      - name: Check for test directory
        id: testdir_check
        run: |
          if [ -d tests ] || [ -d test ]; then
            echo "result=Pass" >> $GITHUB_OUTPUT
          else
            echo "result=Fail" >> $GITHUB_OUTPUT
          fi

      # ðŸ§© Check for GitHub Actions workflows
      - name: Check for GitHub Actions Workflows
        id: workflows_check
        run: |
          if ls .github/workflows/*.yml 1> /dev/null 2>&1; then
            echo "result=Pass" >> $GITHUB_OUTPUT
          else
            echo "result=Fail" >> $GITHUB_OUTPUT
          fi

      # ðŸ”’ Check for presence of a requirements.txt or package.json
      - name: Check for Dependency Manifest
        id: dependency_manifest
        run: |
          if [ -f requirements.txt ] || [ -f package.json ]; then
            echo "result=Pass" >> $GITHUB_OUTPUT
          else
            echo "result=Fail" >> $GITHUB_OUTPUT
          fi

      # ðŸŸ¢ Push results to Port
      - name: Push Result to Port
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          blueprint: githubRepository
          identifier: ${{ github.repository }}
          properties: |
            {
              "has_readme": "${{ steps.readme_check.outputs.result }}",
              "has_license": "${{ steps.license_check.outputs.result }}",
              "has_gitignore": "${{ steps.gitignore_check.outputs.result }}",
              "has_test_dir": "${{ steps.testdir_check.outputs.result }}",
              "has_workflows": "${{ steps.workflows_check.outputs.result }}",
              "has_dependency_manifest": "${{ steps.dependency_manifest.outputs.result }}"
            }
